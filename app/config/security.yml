security:
    encoders:
        FBN\UserBundle\Entity\User:
            algorithm: bcrypt
            cost: 12            

    role_hierarchy:
        ROLE_AUTHOR:      ROLE_USER
        ROLE_ADMIN:       ROLE_AUTHOR
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

        # To be activated if no connexion with FOSUserBundle is needed. Then firewalls: -> oauth_user_provider: -> service: 
        # should be set to hwi_oauth.user.provider
        #hwi:                               
            #id: hwi_oauth.user.provider            

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:   ^/
            anonymous: true
            provider: fos_userbundle
            entry_point: fbn_user.login_entry_point
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                default_target_path: fbn_guide_home
                csrf_provider: security.csrf.token_manager
            logout:
                path:   fos_user_security_logout
                target: fbn_guide_home
                #handlers have to implement Symfony\Component\Security\Http\Logout\LogoutHandlerInterface
                handlers: [fbn_user.logout_handler]
                #succes_handlers have to implement Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface and return a reponse
                # this handler is caled by the logout listener which unlogs the user (Symfony\Component\Security\Http\Firewall\LogoutListener)
                #success_handler: the custom service
                #invalidate_session: false
            remember_me:
                key: %secret%
                lifetime: 31536000
            oauth:
                resource_owners:
                    google: google_login
                    facebook: facebook_login
                login_path:  fos_user_security_login
                use_forward: false
                # For Oauth login errors (example : bad "client_secret", see config.yml)
                failure_path: hwi_oauth_connect
                default_target_path: fbn_guide_home

                oauth_user_provider:
                    # See providers: -> hwi: comment
                    #service: hwi_oauth.user.provider

                    # If activated (see : /vendor/hwi/oauth-bundle/HWI/Bundle/OAuthBundle/Security/Core/User/FOSUBUserProvider.php)
                    # connexion with FOSUserBundle is effective and registration form is proposed to user. If user already exists (email already exists in DB)
                    # user is asked to choose something else (classical behavior)
                    #service: hwi_oauth.user.provider.fosub_bridge            

                    # Same comment but customized user provider (see : /src/FBN/UserBundle/Security/Core/User/FBNUserProvider.php)
                    # Behavior :
                    # 1 - If on oauth login (and user is not already connected), if user exists in database with email matching provider response email
                    #   1-a If provider ID is null or different from the one contained in the response, provider ID is added or changed
                    #   1-b If not, user is returned
                    # 2 - If not, standard bundle implementation (i.e like if hwi_oauth.user.provider.fosub_bridge was activated)
                    service: fbn_user.provider.fosub_bridge

    access_control:   
        - { path: ^/(fr|en)/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/connect, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/bookmarks$, role: ROLE_USER }
        - { path: ^/(fr|en)/bookmarks/manage$, role: ROLE_USER }
        - { path: ^/(fr|en)/admin, role: ROLE_AUTHOR }        